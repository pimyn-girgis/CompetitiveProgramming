\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{c+cp}{\PYGZsh{}define MAX 51}
\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{memo}\PYG{p}{[}\PYG{n}{MAX}\PYG{p}{][}\PYG{n}{MAX}\PYG{o}{*}\PYG{l+m+mi}{100}\PYG{p}{];}
\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{arr}\PYG{p}{[}\PYG{n}{MAX}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{];}
\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{n}\PYG{p}{;}
\PYG{c+cm}{/* memo[i][j] is true if and only if there exists a subset}
\PYG{c+cm}{ * of size i that sums up to j}
\PYG{c+cm}{ */}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{solve}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{memset}\PYG{p}{(}\PYG{n}{memo}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{+w}{ }\PYG{n}{memo}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{memo}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{n}\PYG{p}{;}\PYG{+w}{ }\PYG{o}{++}\PYG{n}{i}\PYG{p}{)}
\PYG{+w}{	}\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{cur}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{arr}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{50}\PYG{p}{;}
\PYG{+w}{		}\PYG{c+cm}{/* Notice that I am adding 50 to every value to handle}
\PYG{c+cm}{		 * negative offsets. Alternatively, this could be handled}
\PYG{c+cm}{		 * more elegantly by adding an offset once and for all at}
\PYG{c+cm}{		 * i.e. set \PYGZsq{}memo[0][offset] = 1\PYGZsq{} instead of \PYGZsq{}memo[0][0] = 1\PYGZsq{}}
\PYG{c+cm}{		 * and to check for a subset of size n and sum v,}
\PYG{c+cm}{		 * check for memo[n][offset + v]}
\PYG{c+cm}{		 *}
\PYG{c+cm}{		 * Notice also that you have to go in a backward direction}
\PYG{c+cm}{		 * from larger j to smaller j since at a certain \PYGZsq{}j\PYGZsq{}, you}
\PYG{c+cm}{		 * inspect the values of smaller j\PYGZsq{}s, and you are not allowed}
\PYG{c+cm}{		 * to repeat values. As we will see, in a variant of this}
\PYG{c+cm}{		 * problem, where you are allowed to repeat values, you}
\PYG{c+cm}{		 * will simply go in a forward direction.}
\PYG{c+cm}{		 *}
\PYG{c+cm}{		 * Notice also that you can prune the search space in the}
\PYG{c+cm}{		 * following two loops to obtain better performance}
\PYG{c+cm}{		 * e.g. k ranges from cur to acc[i], and j ranges from i to 1}
\PYG{c+cm}{		 *}
\PYG{c+cm}{		 * You can optimize further by storing the states reachable}
\PYG{c+cm}{		 * thus far in a vector, and only loop on that vector instead of}
\PYG{c+cm}{		 * looping over the whole memory}
\PYG{c+cm}{		 */}
\PYG{+w}{		}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{j}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{n}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{j}\PYG{+w}{ }\PYG{o}{\PYGZgt{}=}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{;}\PYG{+w}{ }\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{n}{j}\PYG{p}{)}
\PYG{+w}{		}\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{k}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{cur}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{k}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{MAX}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m+mi}{100}\PYG{p}{);}\PYG{+w}{ }\PYG{o}{++}\PYG{n}{k}\PYG{p}{)}
\PYG{+w}{			}\PYG{p}{\PYGZob{}}
\PYG{+w}{				}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{memo}\PYG{p}{[}\PYG{n}{j}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{k}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{n}{cur}\PYG{p}{])}
\PYG{+w}{				}\PYG{p}{\PYGZob{}}
\PYG{+w}{					}\PYG{n}{memo}\PYG{p}{[}\PYG{n}{j}\PYG{p}{][}\PYG{n}{k}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{+w}{				}\PYG{p}{\PYGZcb{}}
\PYG{+w}{			}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
