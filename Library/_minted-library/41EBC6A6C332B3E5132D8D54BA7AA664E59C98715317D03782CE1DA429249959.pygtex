\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{c+cm}{/* gray vertices always form a linear chain of descendants}
\PYG{c+cm}{corresponding to the stack of active \PYGZsq{}dfs(int)\PYGZsq{} invocations */}
\PYG{k}{enum}\PYG{+w}{ }\PYG{n+nc}{color}\PYG{o}{:}\PYG{k+kt}{char}\PYG{p}{\PYGZob{}}\PYG{n}{white}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{gray}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{black}\PYG{p}{\PYGZcb{}}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{MAX}\PYG{p}{];}
\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{p}\PYG{p}{[}\PYG{n}{MAX}\PYG{p}{];}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{init}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)\PYGZob{}}
\PYG{+w}{	}\PYG{n}{memset}\PYG{p}{(}\PYG{n}{vis}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{+w}{ }\PYG{n}{vis}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{memset}\PYG{p}{(}\PYG{n}{p}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mh}{0xFF}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{+w}{ }\PYG{n}{p}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{dfs}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{gray}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{j}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{head}\PYG{p}{[}\PYG{n}{i}\PYG{p}{];}\PYG{+w}{ }\PYG{n}{j}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{l+m+mi}{\PYGZhy{}1}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{j}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{nxt}\PYG{p}{[}\PYG{n}{j}\PYG{p}{])}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{k}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{to}\PYG{p}{[}\PYG{n}{j}\PYG{p}{];}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{white}\PYG{p}{)}\PYG{+w}{	}\PYG{c+c1}{// equivalently, \PYGZsq{}if (p[i] == \PYGZhy{}1)\PYGZsq{}}
\PYG{+w}{			}\PYG{n}{p}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{i}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{dfs}\PYG{p}{(}\PYG{n}{k}\PYG{p}{);}
\PYG{+w}{		}\PYG{c+cm}{/* else;}
\PYG{c+cm}{		You can detect cycles in undirected graphs by checking if}
\PYG{c+cm}{		the visited node is not your parent. You can detect cycles in}
\PYG{c+cm}{		directed graphs by checking if the visited node is gray */}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{vis}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{black}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/* To implement the stack\PYGZhy{}based version of DFS, replace \PYGZsq{}queue\PYGZsq{}}
\PYG{c+cm}{with \PYGZsq{}stack\PYGZsq{} in the following BFS code */}
\end{Verbatim}
